scss：SCSS完全支持css语法变量：定义变量以$开头，若要成为全局变量，则写成$width:5em !global;嵌套引用：$left:left; .div1{ border-#{$left}-width:5px; }变量计算：$left:20px; .div1{ margin-left:$left+12px; }选择器：嵌套：$left:20px; .div1{ margin-left:$left+12px; }属性嵌套需加冒号：p{ border: { color: red; } }父元素引用： .div1{ &:hover{ cursor:hand; } }代码重用： 允许一个选择器，继承另一个选择器，.class1{ font-size : 19px; } .class2{ @extend .class1; color:black; }注意：如果在class2后面设置了class1属性，那么也会影响到class2.引用外部css文件：@import "_test.scss";Mixin&Include：Mixin是可以重用的代码块使用@mixin定义一个代码块：@mixin left { float: left; margin-left: 10px; }使用@include调用mixin：div{ @include left; }参数与缺省值：*边距设置@mixin common($value1,$value2,$defaultValue:12px){display:block;margin-left:$value1;margin-right:$value2;padding:$defaultValue;}.class1{font-size:16px;@include common(12px,13px,15px);}.class2{font-size:16px;@include common(12px,13px);}*浏览器前缀设置下面是一个mixin的实例，用来生成浏览器前缀。@mixin rounded($vert, $horz, $radius: 10px) {　　　　border-#{$vert}-#{$horz}-radius: $radius;　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;　　}调用#navbar li { @include rounded(top, left); }　　#footer { @include rounded(top, left, 5px); }编程式方法：条件语句：p{ @if 1+1==2 { border:none; } @if 5<2 { border:1px solid; } }@if lightness($color)>30% { background-color:#000; } @else{ background-color:#fff; }循环语句：@for $i from 1 to 10 {　　　　.border-#{$i} {　　　　　　border: #{$i}px solid blue;　　　　}　　};$i: 6;@while $i > 0 {　　　　.item-#{$i} { width: 2em * $i; }　　　　$i: $i - 2;　　};@each $member in a, b, c, d {　　　　.#{$member} {　　　　　　background-image: url("/image/#{$member}.jpg");　　　　}　　};函数：@function double($n) {　　　　@return $n * 2;　　}　　#sidebar {　　　　width: double(5px);　　}颜色函数：lighten(#cc3, 10%) // #d6d65c　　darken(#cc3, 10%) // #a3a329　　grayscale(#cc3) // #808080　　complement(#cc3) // #33c